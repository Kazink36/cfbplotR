#Sys.sleep(.1)
print(i)
magick::image_read(logo_list[[i]])
#cli::cli_abort("Wrong")
},
error = function(e,loc = i) {
message("The following error has occured:")
message(e)
ind <<- append(ind,loc)
},
finally = {}
)
}
# Check for missing logos
ind <- NA
for (i in 1:length(logo_list)) {
tryCatch(
expr ={
Sys.sleep(.1)
magick::image_read(logo_list[[i]])
#cli::cli_abort("Wrong")
},
error = function(e) {
message("The following error has occured:")
message(e)
ind <<- append(ind,i)
},
finally = {}
)
}
ind
ind <- ind[-1]
logo_list <- logo_list[-ind]
length(logo_list)
usethis::use_data(logo_list, internal = TRUE, overwrite = TRUE)
devtools::document()
pkgdown::build_home()
pkgdown::build_home()
team <- valid_team_names()
team <- team[1:16]
df <- data.frame(
a = rep(1:8, 4),
b = sort(rep(1:4, 8), decreasing = TRUE),
teams = team
)
# keep alpha == 1 for all teams including an "A"
matches <- grepl("A", team)
df$alpha <- ifelse(matches, 1, 0.2)
# change color of all teams including a "B" to grey
matches <- grepl("B", team)
df$color <- ifelse(matches, "grey",NA)
ggplot(df, aes(x = a, y = b)) +
geom_cfb_logos(aes(team = teams, color = color), width = 0.075) +
geom_label(aes(label = teams), nudge_y = -0.35, alpha = 0.5) +
scale_color_identity() +
theme_void()
team <- valid_team_names()
team <- team[1:32]
df <- data.frame(
a = rep(1:8, 4),
b = sort(rep(1:4, 8), decreasing = TRUE),
teams = team
)
# keep alpha == 1 for all teams including an "A"
matches <- grepl("A", team)
df$alpha <- ifelse(matches, 1, 0.2)
# change color of all teams including a "B" to grey
matches <- grepl("B", team)
df$color <- ifelse(matches, "grey",NA)
ggplot(df, aes(x = a, y = b)) +
geom_cfb_logos(aes(team = teams, color = color, alpha = alpha), width = 0.075) +
geom_label(aes(label = teams), nudge_y = -0.35, alpha = 0.5) +
scale_color_identity() +
theme_void()
df$alpha <- ifelse(matches, 1, 0.6)
ggplot(df, aes(x = a, y = b)) +
geom_cfb_logos(aes(team = teams, color = color, alpha = alpha), width = 0.075) +
geom_label(aes(label = teams), nudge_y = -0.35, alpha = 0.5) +
scale_color_identity() +
theme_void()
df
# keep alpha == 1 for all teams including an "A"
matches <- grepl("A", team)
df$alpha <- ifelse(matches, 1, 0.6)
# change color of all teams including a "B" to grey
matches <- grepl("B", team)
df$color <- ifelse(matches, "grey",NA)
ggplot(df, aes(x = a, y = b)) +
geom_cfb_logos(aes(team = teams, color = color, alpha = alpha), width = 0.075) +
geom_label(aes(label = teams), nudge_y = -0.35, alpha = 0.5) +
scale_color_identity() +
theme_void()
df$alpha <- ifelse(matches, 1, 0.8)
# keep alpha == 1 for all teams including an "A"
matches <- grepl("A", team)
df$alpha <- ifelse(matches, 1, 0.8)
# change color of all teams including a "B" to grey
matches <- grepl("B", team)
df$color <- ifelse(matches, "grey",NA)
ggplot(df, aes(x = a, y = b)) +
geom_cfb_logos(aes(team = teams, color = color, alpha = alpha), width = 0.075) +
geom_label(aes(label = teams), nudge_y = -0.35, alpha = 0.5) +
scale_color_identity() +
theme_void()
df$alpha <- ifelse(matches, 1, 0.9)
# keep alpha == 1 for all teams including an "A"
matches <- grepl("A", team)
df$alpha <- ifelse(matches, 1, 0.9)
# change color of all teams including a "B" to grey
matches <- grepl("B", team)
df$color <- ifelse(matches, "grey",NA)
ggplot(df, aes(x = a, y = b)) +
geom_cfb_logos(aes(team = teams, color = color, alpha = alpha), width = 0.075) +
geom_label(aes(label = teams), nudge_y = -0.35, alpha = 0.5) +
scale_color_identity() +
theme_void()
# change color of all teams including an "o" to grey
matches <- grepl("o", team)
df$color <- ifelse(matches, "grey",NA)
ggplot(df, aes(x = a, y = b)) +
geom_cfb_logos(aes(team = teams, color = color, alpha = alpha), width = 0.075) +
geom_label(aes(label = teams), nudge_y = -0.35, alpha = 0.5) +
scale_color_identity() +
theme_void()
devtools::document()
pkgdown::build_site
pkgdown::build_site()
pkgdown::build_home()
pkgdown::build_site()
install.packages("gtExtra")
remotes::install_github("jthomasmock/gtExtras")
library(cfbplotR)
df <- data.frame(team = valid_team_names()[1:6],logo = team)
df <- data.frame(team = valid_team_names()[1:6],logo = valid_team_names()[1:6])
df
df %>% gt() %>% gt_fmt_cfb(columns = "logo")
gt_fmt_cfb <- function(gt_object, columns, height = 30){
# convert tidyeval column to bare string
col_bare <- rlang::enexpr(columns) %>% rlang::as_string()
grp_var <- gt_object[["_boxhead"]][["var"]][which(gt_object[["_boxhead"]][["type"]]=="stub")]
# stopifnot("img_source must be 'web' or 'local'" = img_source %in% c("web", "local"))
img_source <- "web"
# need to correct for rownames
gt_object %>%
text_transform(
locations = if(isTRUE(grp_var == col_bare)){
cells_stub()
} else {
cells_body({{ columns }})
},
fn = function(x){
if(img_source == "web"){
web_image(url = logo_list[[x]], height = height)
} else {
local_image(filename = x, height = height)
}
}
)
}
df %>% gt() %>% gt_fmt_cfb(columns = "logo")
library(gt)
df %>% gt() %>% gt_fmt_cfb(columns = "logo")
gt_fmt_cfb <- function(gt_object, columns, height = 30){
# convert tidyeval column to bare string
col_bare <- rlang::enexpr(columns) %>% rlang::as_string()
grp_var <- gt_object[["_boxhead"]][["var"]][which(gt_object[["_boxhead"]][["type"]]=="stub")]
# stopifnot("img_source must be 'web' or 'local'" = img_source %in% c("web", "local"))
img_source <- "web"
# need to correct for rownames
gt_object %>%
text_transform(
locations = if(isTRUE(grp_var == col_bare)){
cells_stub()
} else {
cells_body({{ columns }})
},
fn = function(x){
if(img_source == "web"){
print(x)
web_image(url = logo_list[[x]], height = height)
} else {
local_image(filename = x, height = height)
}
}
)
}
df %>% gt() %>% gt_fmt_cfb(columns = "logo")
sapply(logo_list, function(x){logo_list[[x]]})
str(logo_list)
logo_list[df$team]
gt_fmt_cfb <- function(gt_object, columns, height = 30){
# convert tidyeval column to bare string
col_bare <- rlang::enexpr(columns) %>% rlang::as_string()
grp_var <- gt_object[["_boxhead"]][["var"]][which(gt_object[["_boxhead"]][["type"]]=="stub")]
# stopifnot("img_source must be 'web' or 'local'" = img_source %in% c("web", "local"))
img_source <- "web"
# need to correct for rownames
gt_object %>%
text_transform(
locations = if(isTRUE(grp_var == col_bare)){
cells_stub()
} else {
cells_body({{ columns }})
},
fn = function(x){
if(img_source == "web"){
print(x)
web_image(url = logo_list[x], height = height)
} else {
local_image(filename = x, height = height)
}
}
)
}
logo_list[df$team]
df %>% gt() %>% gt_fmt_cfb(columns = "logo")
devtools::document()
rm(list = c("gt_fmt_cfb"))
devtools::document()
pkgdown::build_reference()
pkgdown::build_reference()
pkgdown::build_reference()
devtools::document()
pkgdown::build_reference()
devtools::document()
pkgdown::build_reference()
df <- data.frame(team = valid_team_names()[1:8],logo = valid_team_names()[1:8])
df %>%
gt() %>%
gt_fmt_cfb(columns = "logo")
?gtsave
df %>%
gt() %>%
gt_fmt_cfb(columns = "logo") %>% gtsave(filename = "fmt_cfb.png")
devtools::document()
pkgdown::build_reference()
devtools::document()
pkgdown::build_reference()
devtools::document()
pkgdown::build_reference()
library(cfbplotR)
knitr::opts_chunk$set(echo = TRUE)
team_plot_data %>%
select(team,logo = team, pass_epa,n_pass, rush_epa,n_rush)
team_plot_data <- pbp %>%
group_by(team = offense_play) %>%
summarize(rush_epa = mean(if_else(rush == 1,EPA,NA_real_),na.rm = TRUE),
n_rush = sum(rush),
pass_epa = mean(if_else(pass == 1,EPA,NA_real_),na.rm = TRUE),
n_pass = sum(pass)) %>%
filter(team %in% team_info$team) %>%
left_join(team_info,by = "team")
library(cfbfastR)
library(cfbplotR)
library(tidyverse)
pbp <- cfbfastR::cfbd_pbp_data(2021, week = 1, epa_wpa = TRUE)
pbp <- cfbfastR::cfbd_pbp_data(2021, week = 1, epa_wpa = TRUE)
team_info <- cfbfastR::cfbd_team_info()
team_info <- team_info %>%
select(team = school,conference) %>%
filter(conference %in% c("Pac-12","ACC","SEC","Big Ten","Big 12"))
team_plot_data <- pbp %>%
group_by(team = offense_play) %>%
summarize(rush_epa = mean(if_else(rush == 1,EPA,NA_real_),na.rm = TRUE),
n_rush = sum(rush),
pass_epa = mean(if_else(pass == 1,EPA,NA_real_),na.rm = TRUE),
n_pass = sum(pass)) %>%
filter(team %in% team_info$team) %>%
left_join(team_info,by = "team")
head(team_plot_data)
team_plot_data %>%
select(team,logo = team, pass_epa,n_pass, rush_epa,n_rush)
team_plot_data %>%
transmute(team,logo = team, pass_epa,n_pass, rush_epa,n_rush)
team_plot_data %>%
transmute(team,logo = team,
pass_epa = round(pass_epa,2),n_pass,
rush_epa = round(rush_epa,2),n_rush)
team_plot_data %>%
transmute(conference, team,logo = team,
pass_epa = round(pass_epa,2),n_pass,
rush_epa = round(rush_epa,2),n_rush) %>%
arrange(desc(pass_epa))
team_plot_data %>%
transmute(conference, team,logo = team,
pass_epa = round(pass_epa,2),n_pass,
rush_epa = round(rush_epa,2),n_rush) %>%
arrange(desc(pass_epa)) %>%
gt() %>%
gt_fmt_cfb()
team_plot_data %>%
transmute(conference, team,logo = team,
pass_epa = round(pass_epa,2),n_pass,
rush_epa = round(rush_epa,2),n_rush) %>%
arrange(desc(pass_epa)) %>%
gt() %>%
gt_fmt_cfb(columns = c("conference","logo"))
team_plot_data %>%
transmute(conference, team,logo = team,
pass_epa = round(pass_epa,2),n_pass,
rush_epa = round(rush_epa,2),n_rush) %>%
arrange(desc(pass_epa)) %>%
gt() %>%
gt_fmt_cfb(columns = c(conference,logo))
team_plot_data %>%
transmute(conference, team,logo = team,
pass_epa = round(pass_epa,2),n_pass,
rush_epa = round(rush_epa,2),n_rush) %>%
arrange(desc(pass_epa)) %>%
gt() %>%
gt_fmt_cfb(columns = conference)
team_plot_data %>%
transmute(conference, team,logo = team,
pass_epa = round(pass_epa,2),n_pass,
rush_epa = round(rush_epa,2),n_rush) %>%
arrange(desc(pass_epa)) %>%
gt() %>%
gt_fmt_cfb(columns = c(conference))
team_plot_data %>%
transmute(conference, team,logo = team,
pass_epa = round(pass_epa,2),n_pass,
rush_epa = round(rush_epa,2),n_rush) %>%
arrange(desc(pass_epa)) %>%
gt() %>%
gt_fmt_cfb(columns = vars("conference","logo"))
team_plot_data %>%
transmute(conference, team,logo = team,
pass_epa = round(pass_epa,2),n_pass,
rush_epa = round(rush_epa,2),n_rush) %>%
arrange(desc(pass_epa)) %>%
gt() %>%
gtExtras::fmt_pad_num(columns = c("pass_epa","rush_epa"))
team_plot_data %>%
transmute(conference, team,logo = team,
pass_epa = round(pass_epa,2),n_pass,
rush_epa = round(rush_epa,2),n_rush) %>%
arrange(desc(pass_epa)) %>%
gt() %>%
#gtExtras::fmt_pad_num(columns = c("pass_epa","rush_epa"))
gt_fmt_cfb(columns = c("conference","logo"))
team_plot_data %>%
library(cfbplotR)
transmute(conference, team,logo = team,
library(gt)
)
library(gt)
knitr::opts_chunk$set(echo = TRUE)
team_plot_data %>%
transmute(conference, team,logo = team,
pass_epa = round(pass_epa,2),n_pass,
rush_epa = round(rush_epa,2),n_rush) %>%
arrange(desc(pass_epa)) %>%
gt() %>%
#gtExtras::fmt_pad_num(columns = c("pass_epa","rush_epa"))
gt_fmt_cfb(columns = c("conference","logo"))
gt_fmt_cfb <- function(gt_object, columns, height = 30){
# convert tidyeval column to bare string
col_bare <- rlang::enexpr(columns) %>% print() %>% rlang::as_string()
grp_var <- gt_object[["_boxhead"]][["var"]][which(gt_object[["_boxhead"]][["type"]]=="stub")]
# stopifnot("img_source must be 'web' or 'local'" = img_source %in% c("web", "local"))
img_source <- "web"
# need to correct for rownames
gt_object %>%
text_transform(
locations = if(isTRUE(grp_var == col_bare)){
cells_stub()
} else {
cells_body({{ columns }})
},
fn = function(x){
if(img_source == "web"){
web_image(url = logo_list[x], height = height)
} else {
local_image(filename = x, height = height)
}
}
)
}
team_plot_data %>%
transmute(conference, team,logo = team,
pass_epa = round(pass_epa,2),n_pass,
rush_epa = round(rush_epa,2),n_rush) %>%
arrange(desc(pass_epa)) %>%
gt() %>%
#gtExtras::fmt_pad_num(columns = c("pass_epa","rush_epa"))
gt_fmt_cfb(columns = c("conference","logo"))
df <- data.frame(team = valid_team_names()[1:8],logo = valid_team_names()[1:8])
df$logo <- logo_list[df$team]
df %>%
gt() %>%
gt_fmt_cfb(columns = "logo")
df <- data.frame(team = valid_team_names()[1:8],logo = valid_team_names()[1:8])
df$logo <- logo_list[df$team]
df %>%
gt() %>%
gtExtras::gt_img_rows(columns = "logo")
df <- data.frame(team = valid_team_names()[1:8],logo = valid_team_names()[1:8])
df$logo <- logo_list[df$team]
df$logo2 <- logo_list[df$team]
df %>%
gt() %>%
gtExtras::gt_img_rows(columns = c("logo","logo2"))
df <- data.frame(team = valid_team_names()[1:8],logo = valid_team_names()[1:8])
df$logo <- logo_list[df$team]
df$logo2 <- logo_list[df$team]
df %>%
gt() %>%
gtExtras::gt_img_rows(columns = c("logo","logo2"))
df <- data.frame(team = valid_team_names()[1:8],logo = valid_team_names()[1:8])
df$logo <- logo_list[df$team]
df$logo2 <- logo_list[df$team]
df
df %>%
gt() %>%
gtExtras::gt_img_rows(columns = c("logo","logo2"))
c("logo","logo2")
team_plot_data %>%
transmute(conference, team,logo = team,
pass_epa = round(pass_epa,2),n_pass,
rush_epa = round(rush_epa,2),n_rush) %>%
arrange(desc(pass_epa)) %>%
gt() %>%
#gtExtras::fmt_pad_num(columns = c("pass_epa","rush_epa"))
gt_fmt_cfb(conference) %>%
gt_fmt_cfb("logo")
gt_fmt_cfb <- function(gt_object, columns, height = 30){
# convert tidyeval column to bare string
col_bare <- rlang::enexpr(columns) %>% rlang::as_string()
grp_var <- gt_object[["_boxhead"]][["var"]][which(gt_object[["_boxhead"]][["type"]]=="stub")]
# stopifnot("img_source must be 'web' or 'local'" = img_source %in% c("web", "local"))
img_source <- "web"
# need to correct for rownames
gt_object %>%
text_transform(
locations = if(isTRUE(grp_var == col_bare)){
cells_stub()
} else {
cells_body({{ columns }})
},
fn = function(x){
if(img_source == "web"){
web_image(url = logo_list[x], height = height)
} else {
local_image(filename = x, height = height)
}
}
)
}
team_plot_data %>%
transmute(conference, team,logo = team,
pass_epa = round(pass_epa,2),n_pass,
rush_epa = round(rush_epa,2),n_rush) %>%
arrange(desc(pass_epa)) %>%
gt() %>%
#gtExtras::fmt_pad_num(columns = c("pass_epa","rush_epa"))
gt_fmt_cfb(conference) %>%
gt_fmt_cfb("logo")
team_plot_data %>%
transmute(conference, team,logo = team,
pass_epa = round(pass_epa,2),n_pass,
rush_epa = round(rush_epa,2),n_rush) %>%
arrange(desc(pass_epa)) %>%
gt() %>%
gtExtras::fmt_pad_num(columns = c("pass_epa","rush_epa"))
team_plot_data %>%
transmute(conference, team,logo = team,
pass_epa = round(pass_epa,2),n_pass,
rush_epa = round(rush_epa,2),n_rush) %>%
arrange(desc(pass_epa)) %>%
gt() %>%
gtExtras::fmt_pad_num(columns = c("pass_epa","rush_epa")) %>%
gt_fmt_cfb(conference) %>%
gt_fmt_cfb("logo")
team_plot_data %>%
transmute(conference, team,logo = team,
pass_epa = round(pass_epa,2),n_pass,
rush_epa = round(rush_epa,2),n_rush) %>%
arrange(desc(pass_epa)) %>%
head(8) %>%
gt() %>%
gtExtras::fmt_pad_num(columns = c("pass_epa","rush_epa")) %>%
gt_fmt_cfb(conference) %>%
gt_fmt_cfb("logo")
valid_team_names()
devtools::document()
rm(list = c("gt_fmt_cfb"))
devtools::document()
pkgdown::build_site()
pkgdown::build_site()
pkgdown::build_home
pkgdown::build_home()
library(cfbplotR)
library(gt)
knitr::opts_chunk$set(echo = TRUE)
team_plot_data %>%
transmute(conference, team,logo = team,
pass_epa = round(pass_epa,2),n_pass,
rush_epa = round(rush_epa,2),n_rush) %>%
arrange(desc(pass_epa)) %>%
head(8) %>%
gt() %>%
gt_fmt_cfb(columns = c(conference,logo))
devtools::document()
pkgdown::build_site()
pkgdown::build_reference()
usethis::use_mit_license(copyright_holder = "Jared Lee")
pkgdown::build_home()
pkgdown::build_home()
pkgdown::build_home()
pkgdown::build_site()
devtools::document()
pkgdown::build_site()
